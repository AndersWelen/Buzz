<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
	<version>2.0</version>
	<date>2014-04-04T12:36:09Z</date>

	<groups>
		<group>
			<name>JBoss/WildFly Application Servers</name>
		</group>
	</groups>

	<templates>
		<template>
			<template>Template JBoss-WildFly Buzz</template>
			<name>Template JBoss-WildFly Buzz</name>

			<groups>
				<group>
					<name>JBoss/WildFly Application Servers</name>
				</group>
			</groups>

			<applications />

			<items>
				<item>
					<name>BuzzAgent ping</name>
					<type>0</type>					<!-- 0=Zabbix Agent -->
					<key>buzz.ping</key>
					<delay>30</delay>				<!-- Update interval in sec -->
					<history>90</history>
					<trends>365</trends>
					<value_type>3</value_type>		<!-- 3=Numeric unsigned -->
					<description>The BuzzAgent always returns 1 for this item. It could be used in combination with nodata() for availability check.</description>
					<applications />
				</item>
			</items>

			<discovery_rules>
				<discovery_rule>
					<name>Discovery</name>
					<type>0</type>					<!-- 0=Zabbix Agent -->
					<key>buzz.discovery</key>
					<delay>30</delay>				<!-- Update interval in sec -->
					<lifetime>30</lifetime>			<!-- Days before no longer discovered items should be removed -->
					<description>Discovery of Buzz exposed information from JBoss/WildFly Application Servers.</description>

					<item_prototypes>
						<item_prototype>
							<name>{#BUZZTITLE} - {#BUZZLABEL}</name>
							<type>0</type>						<!-- 0=Zabbix Agent -->
							<key>buzz.fetch[{#BUZZPATH}]</key>
							<delay>30</delay>					<!-- Update interval in sec -->
							<history>90</history>
							<trends>365</trends>
							<value_type>0</value_type>			<!-- 0=Numeric float -->
							<!-- TODO Add when Zabbix can handle it -->
							<!-- <units>{#BUZZITEM}</unit> -->
							<description />
							<applications />
						</item_prototype>
					</item_prototypes>

					<trigger_prototypes>
					
						<!-- WARNINGS -->
						<trigger_prototype>
							<expression>{Template JBoss-WildFly Buzz:buzz.fetch[{#BUZZPATH}].last(0)}&lt;{#BUZZWARNLOW}</expression>
							<name>{#BUZZTITLE} - {#BUZZLABEL}: Current value is less than {#BUZZWARNLOW}</name>
							<priority>2</priority>			<!-- 2=warning -->
							<description>Warn if last collected value is lower than threshold.</description>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{Template JBoss-WildFly Buzz:buzz.fetch[{#BUZZPATH}].last(0)}&gt;{#BUZZWARNHIGH}</expression>
							<name>{#BUZZTITLE} - {#BUZZLABEL}: Current value is higher than {#BUZZWARNHIGH}</name>
							<priority>2</priority>			<!-- 2=warning -->
							<description>Warn if last collected value is higher than threshold.</description>
						</trigger_prototype>
						
						<!-- CRITICAL -->
						<trigger_prototype>
							<expression>{Template JBoss-WildFly Buzz:buzz.fetch[{#BUZZPATH}].last(0)}&lt;{#BUZZCRITICALLOW}</expression>
							<name>{#BUZZTITLE} - {#BUZZLABEL}: Current value is less than {#BUZZCRITICALLOW}</name>
							<priority>4</priority>			<!-- 4=high -->							
							<description>Send alarm if last collected value is lower than threshold.</description>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{Template JBoss-WildFly Buzz:buzz.fetch[{#BUZZPATH}].last(0)}&gt;{#BUZZCRITICALHIGH}</expression>
							<name>{#BUZZTITLE} - {#BUZZLABEL}: Current value is higher than {#BUZZCRITICALHIGH}</name>
							<priority>4</priority>			<!-- 4=high -->
							<description>Send alarm if last collected value is higher than threshold.</description>
						</trigger_prototype>

					</trigger_prototypes>

					<!-- TODO It seems like that graphs isn't possible yet: https://support.zabbix.com/browse/ZBXNEXT-927 -->
					<graph_prototypes />
						
				</discovery_rule>
			</discovery_rules>

			<macros />

			<templates />

			<screens />

		</template>
	</templates>

	<triggers>
		<!-- Connectivity check -->
		<trigger>
			<expression>{Template JBoss-WildFly Buzz:buzz.ping.nodata(1m)}=1</expression>
			<name>JBoss/WildFly Zabbix agent (Buzz) on {HOSTNAME} has been unreachable for 1 minute</name>
			<url></url>
			<priority>4</priority>			<!-- 4=high -->
			<description />
			<dependencies />
		</trigger>
	</triggers>

</zabbix_export>
